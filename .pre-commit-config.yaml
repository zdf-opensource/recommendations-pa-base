# run manually: `pre-commit run -a`
# install (first time): `pip install pre-commit; pre-commit install`
# install (overwrite): `pre-commit install -f`
# update hooks in this file to latest upstream revision: `pre-commit autoupdate`
#
# explanation of pre-commit and some hooks: https://towardsdatascience.com/pre-commit-hooks-you-must-know-ff247f5feb7e
# tools for better py code: https://towardsdatascience.com/nine-simple-steps-for-better-looking-python-code-87e5d9d3b1cf

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-ast
      - id: check-builtin-literals
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-yaml
        args: [--unsafe]
      - id: debug-statements
      - id: end-of-file-fixer
      - id: no-commit-to-branch
        args: [--branch, Staging, --branch, Production]
      - id: trailing-whitespace
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-no-eval
        stages: [manual]  # conflicts with model.eval() calls, e.g., in create_content_clusters_model
      - id: python-no-log-warn
      - id: python-use-type-annotations
  # isort officially supports pre-commit https://pycqa.github.io/isort/docs/configuration/pre-commit/
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        name: isort (python)
        # use isort profile for black https://pycqa.github.io/isort/docs/configuration/black_compatibility/
        args: ["--profile", "black", "--filter-files", "-p", "reco", "-p", "pa_base"]
      - id: isort
        name: isort (cython)
        types: [cython]
      - id: isort
        name: isort (pyi)
        types: [pyi]
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.0
    hooks:
      - id: pyupgrade
        args: [ --py37-plus ]
  - repo: https://github.com/psf/black
    rev: 23.10.1
    hooks:
      - id: black
  - repo: https://github.com/asottile/blacken-docs
    rev: 1.16.0
    hooks:
    -   id: blacken-docs
        additional_dependencies: [black==23.10.1]
  - repo: https://github.com/PyCQA/flake8
    # repo: https://gitlab.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: ["--count", "--extend-ignore=E203,E501", "--show-source", "--statistics"]
        # --count: count total errors
        # --extend-ignore: instead of --ignore to keep default ignore list
        #     ignore E203 - whitespace before ':' (handled by black)
        #     ignore E501 - line too long (handled by black)
        # --show-source: print code snippet where an error occurs
        # --statistics: print count per error
        # c.f., https://flake8.pycqa.org/en/latest/user/options.html
#  - repo: https://github.com/pre-commit/mirrors-pylint
#    rev: 2.6.0
#    hooks:
#      - id: pylint
#  - repo: https://github.com/pre-commit/mirrors-mypy
#    rev: v0.782
#    hooks:
#      - id: mypy
  - repo: local
    hooks:
      - id: pytest
        name: pytest all tests
        entry: pytest
        args: ["-p", "no:cacheprovider", "tests/"]
        language: python
        # files: ^tests/*.py$
        always_run: true
        pass_filenames: false
        description: run all tests with pytest
        stages: [manual]

default_language_version:
  python: python3.11

# exclude: ^(modelfactory/sagemaker/.*|loadtest/.*)$
